// Code generated by mockery v1.0.0. DO NOT EDIT.

package mockserving

import discovery "k8s.io/client-go/discovery"
import mock "github.com/stretchr/testify/mock"
import networkingv1alpha1 "github.com/knative/serving/pkg/client/clientset/versioned/typed/networking/v1alpha1"
import servingv1alpha1 "github.com/knative/serving/pkg/client/clientset/versioned/typed/serving/v1alpha1"
import v1alpha1 "github.com/knative/serving/pkg/client/clientset/versioned/typed/autoscaling/v1alpha1"

// Interface is an autogenerated mock type for the Interface type
type Interface struct {
	mock.Mock
}

// Autoscaling provides a mock function with given fields:
func (_m *Interface) Autoscaling() v1alpha1.AutoscalingV1alpha1Interface {
	ret := _m.Called()

	var r0 v1alpha1.AutoscalingV1alpha1Interface
	if rf, ok := ret.Get(0).(func() v1alpha1.AutoscalingV1alpha1Interface); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(v1alpha1.AutoscalingV1alpha1Interface)
		}
	}

	return r0
}

// AutoscalingV1alpha1 provides a mock function with given fields:
func (_m *Interface) AutoscalingV1alpha1() v1alpha1.AutoscalingV1alpha1Interface {
	ret := _m.Called()

	var r0 v1alpha1.AutoscalingV1alpha1Interface
	if rf, ok := ret.Get(0).(func() v1alpha1.AutoscalingV1alpha1Interface); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(v1alpha1.AutoscalingV1alpha1Interface)
		}
	}

	return r0
}

// Discovery provides a mock function with given fields:
func (_m *Interface) Discovery() discovery.DiscoveryInterface {
	ret := _m.Called()

	var r0 discovery.DiscoveryInterface
	if rf, ok := ret.Get(0).(func() discovery.DiscoveryInterface); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(discovery.DiscoveryInterface)
		}
	}

	return r0
}

// Networking provides a mock function with given fields:
func (_m *Interface) Networking() networkingv1alpha1.NetworkingV1alpha1Interface {
	ret := _m.Called()

	var r0 networkingv1alpha1.NetworkingV1alpha1Interface
	if rf, ok := ret.Get(0).(func() networkingv1alpha1.NetworkingV1alpha1Interface); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(networkingv1alpha1.NetworkingV1alpha1Interface)
		}
	}

	return r0
}

// NetworkingV1alpha1 provides a mock function with given fields:
func (_m *Interface) NetworkingV1alpha1() networkingv1alpha1.NetworkingV1alpha1Interface {
	ret := _m.Called()

	var r0 networkingv1alpha1.NetworkingV1alpha1Interface
	if rf, ok := ret.Get(0).(func() networkingv1alpha1.NetworkingV1alpha1Interface); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(networkingv1alpha1.NetworkingV1alpha1Interface)
		}
	}

	return r0
}

// Serving provides a mock function with given fields:
func (_m *Interface) Serving() servingv1alpha1.ServingV1alpha1Interface {
	ret := _m.Called()

	var r0 servingv1alpha1.ServingV1alpha1Interface
	if rf, ok := ret.Get(0).(func() servingv1alpha1.ServingV1alpha1Interface); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(servingv1alpha1.ServingV1alpha1Interface)
		}
	}

	return r0
}

// ServingV1alpha1 provides a mock function with given fields:
func (_m *Interface) ServingV1alpha1() servingv1alpha1.ServingV1alpha1Interface {
	ret := _m.Called()

	var r0 servingv1alpha1.ServingV1alpha1Interface
	if rf, ok := ret.Get(0).(func() servingv1alpha1.ServingV1alpha1Interface); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(servingv1alpha1.ServingV1alpha1Interface)
		}
	}

	return r0
}
